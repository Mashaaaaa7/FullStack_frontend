import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { HistoryItem } from '../types';
import { api } from '../api';
import './ProfilePage.css';

const ProfilePage: React.FC = () => {
    const [history, setHistory] = useState<HistoryItem[]>([]);
    const [stats, setStats] = useState({
        totalActions: 0,
        filesUploaded: 0,
        cardsCreated: 0
    });
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string>('');
    const navigate = useNavigate();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const loadHistory = async () => {
        setLoading(true);
        setError('');

        try {
            console.log('Loading history...');
            const response = await api.getHistory();
            console.log('History response:', response);

            if (response.success) {
                setHistory(response.history);

                // –†–∞—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                const filesUploaded = response.history.filter(item => item.type === 'upload').length;
                const cardsCreated = response.history
                    .filter(item => item.type === 'create_cards')
                    .reduce((total, item) => total + (item.cards_count || 0), 0);

                setStats({
                    totalActions: response.history.length,
                    filesUploaded,
                    cardsCreated
                });
            } else {
                setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é');
            }
        } catch (error) {
            console.error('Error loading history:', error);
            setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏');
            // –î–ª—è –¥–µ–º–æ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            setHistory([
                {
                    id: '1',
                    type: 'upload',
                    deck_name: 'example.pdf',
                    timestamp: new Date().toLocaleString('ru-RU'),
                    file_size: 2048576
                },
                {
                    id: '2',
                    type: 'create_cards',
                    deck_name: 'example.pdf',
                    timestamp: new Date().toLocaleString('ru-RU'),
                    cards_count: 5
                }
            ]);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        loadHistory();
    }, []);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    const formatFileSize = (bytes: number) => {
        return (bytes / 1024 / 1024).toFixed(2) + ' MB';
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
    const getActionIcon = (type: string) => {
        switch (type) {
            case 'upload': return 'üì§';
            case 'create_cards': return 'üé¥';
            default: return 'üìù';
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è
    const getActionText = (item: HistoryItem) => {
        switch (item.type) {
            case 'upload':
                return `–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª ${item.deck_name} (${formatFileSize(item.file_size || 0)})`;
            case 'create_cards':
                return `–°–æ–∑–¥–∞–Ω–æ ${item.cards_count} –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ ${item.deck_name}`;
            default:
                return `–î–µ–π—Å—Ç–≤–∏–µ —Å ${item.deck_name}`;
        }
    };

    return (
        <div className="profile-page">
            <header className="profile-header">
                <h1>–ü—Ä–æ—Ñ–∏–ª—å</h1>
                <nav className="profile-nav">
                    <div style={{ marginRight: '20px' }}>
                        <button
                            className="nav-button"
                            onClick={() => navigate('/app')}
                        >
                            –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                        </button>
                    </div>
                    <div>
                        <button
                            className="nav-button"
                            onClick={() => navigate('/')}
                        >
                            –ì–ª–∞–≤–Ω–∞—è
                        </button>
                    </div>
                </nav>
            </header>

            <div className="profile-content">
                {/* –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π */}
                <section className="history-section">
                    <h2>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π ({history.length})</h2>

                    {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</p>}
                    {error && <div className="error-message">{error}</div>}

                    <div className="history-list">
                        {history.length > 0 ? (
                            history.map(item => (
                                <div key={item.id} className="history-item">
                                    <div className="history-icon">
                                        {getActionIcon(item.type)}
                                    </div>
                                    <div className="history-content">
                                        <p className="history-text">{getActionText(item)}</p>
                                        <p className="history-time">{item.timestamp}</p>
                                    </div>
                                </div>
                            ))
                        ) : (
                            <div className="empty-history">
                                <p>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø—É—Å—Ç–∞</p>
                                <p>–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–¥–µ—Å—å</p>
                            </div>
                        )}
                    </div>
                </section>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <section className="stats-section">
                    <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
                    <div className="stats-grid">
                        <div className="stat-card">
                            <h3>–í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π</h3>
                            <div className="stat-number">{stats.totalActions}</div>
                        </div>
                        <div className="stat-card">
                            <h3>–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤</h3>
                            <div className="stat-number">{stats.filesUploaded}</div>
                        </div>
                        <div className="stat-card">
                            <h3>–°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫</h3>
                            <div className="stat-number">{stats.cardsCreated}</div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    );
};

export default ProfilePage;